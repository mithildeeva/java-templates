name = PropertiesConfig

property.filepath = /opt/javatemplate/logs

# App log - All levels of logging
appender.rollingApp.type = RollingFile
appender.rollingApp.name = rollingApp
appender.rollingApp.fileName = ${filepath}/app.log
appender.rollingApp.filePattern = ${filepath}/app.%d{yyyyMMdd}.%i.log.gz
appender.rollingApp.layout.type=PatternLayout
appender.rollingApp.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss} [%t] %c{1} - %msg%n
appender.rollingApp.policies.type = Policies
appender.rollingApp.policies.time.type = TimeBasedTriggeringPolicy
#How often a rollover should occur based on the most specific time unit in the date pattern.
# For example, with a date pattern with hours as the most specific item and and increment of 4 rollovers would occur every 4 hours.
# The default value is 1.
appender.rollingApp.policies.time.interval = 1
#Indicates whether the interval should be adjusted to cause the next rollover to occur on the interval boundary.
# For example, if the item is hours,
# the current hour is 3 am and the interval is 4 then the first rollover will occur at 4 am and then next ones will occur at 8 am, noon, 4pm, etc.
appender.rollingApp.policies.time.modulate = true
#Indicates the maximum number of seconds to randomly delay a rollover.
# By default, this is 0 which indicates no delay.
# This setting is useful on servers where multiple applications are configured to rollover log files at the same time and can spread the load of doing so across time.
appender.rollingApp.policies.time.maxRandomDelay = 500
appender.rollingApp.policies.size.type = SizeBasedTriggeringPolicy
appender.rollingApp.policies.size.size = 50MB
appender.rollingApp.strategy.type = DefaultRolloverStrategy
#The maximum value of the counter.
# Once this values is reached older archives will be deleted on subsequent rollovers.
# The default value is 7.
appender.rollingApp.strategy.max = 20

# Error log - Only error logs
appender.rollingError.type = RollingFile
appender.rollingError.name = rollingError
appender.rollingError.fileName = ${filepath}/error.log
appender.rollingError.filePattern = ${filepath}/error.%d{yyyyMMdd}.%i.log.gz
appender.rollingError.layout.type=PatternLayout
appender.rollingError.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss} [%t] %c{1} - %msg%n
appender.rollingError.policies.type = Policies
appender.rollingError.policies.time.type = TimeBasedTriggeringPolicy
appender.rollingError.policies.time.interval = 2
appender.rollingError.policies.time.maxRandomDelay = 500
appender.rollingError.policies.size.type = SizeBasedTriggeringPolicy
appender.rollingError.policies.size.size = 50MB
appender.rollingError.strategy.type = DefaultRolloverStrategy
appender.rollingError.strategy.max = 20
appender.rollingError.filter.threshold.type = ThresholdFilter
appender.rollingError.filter.threshold.level = error

# Console log - All logs
appender.console.type = Console
appender.console.name = consoleAppender

rootLogger.level = info
rootLogger.appenderRef.rollingApp.ref = rollingApp
rootLogger.appenderRef.rollingError.ref = rollingError
rootLogger.appenderRef.stdout.ref = consoleAppender